---
image: ghcr.io/maxking/mailman-ci-runner

include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

py37-django32:
  stage: test
  script:
    - tox -e py37-django32-git

py38-django32:
  stage: test
  script:
    - tox -e py38-django32-git

py39-django32:
  stage: test
  script:
    - tox -e py39-django32-git

py39-django40:
  stage: test
  script:
    - tox -e py39-django40-git

py39-django41:
  stage: test
  script:
    - tox -e py39-django41-git

py310-django32:
  stage: test
  script:
    - tox -e py310-django32-git

py310-django40:
  stage: test
  script:
    - tox -e py310-django40-git

py311-django41:
  stage: test
  script:
    - tox -e py311-django41-git

py311-django42:
  stage: test
  script:
    - tox -e py311-django42-git

released:
  stage: test
  script:
    - tox -e py310-django41

# Uncomment when we have a better way to run tests against the
# master. Currently, there are version constraints in all the
# sub-packages, which leads to all failing tests.
# py310-django-latest:
#   stage: test
#   allow_failure: true
#   script:
#     - printf "Remove all django version restriction from setup.py.\n"
#     - sed -E 's/django[<=>,.[:digit:]]+/django/' -i setup.py
#     - tox -e py310-django-latest

coverage:
  stage: test
  script:
    - tox -e cov
  artifacts:
    paths:
      - coverage
    expire_in: 5 days

qa:
  stage: test
  script:
    - tox -e qa

upstream-client:
  stage: test
  script:
    - tox -e upstream-client
  only:
    variables:
      - $MAILMANCLIENT_COMMIT_SHA

upstream-django-mailman3:
  stage: test
  script:
    - tox -e upstream-django-mailman3
  only:
    variables:
      - $DJANGO_MAILMAN3_COMMIT_SHA

include:
  - template: SAST.gitlab-ci.yml

variables:
  SAST_DEFAULT_ANALYZERS: "bandit,secrets"
